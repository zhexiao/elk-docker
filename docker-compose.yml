#
# 测试：docker-compose up
#
version: "3.2"
services:
  elasticsearch_master1:
    image: elasticsearch:latest
    ports:
      - ${MASTER1_HTTP_PORT}:${MASTER1_HTTP_PORT}
      - ${MASTER1_TRANSPORT_TCP_PORT}:${MASTER1_TRANSPORT_TCP_PORT}
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - NODE_NAME=${MASTER1_NODE_NAME}
      - NODE_MASTER=true
      - NODE_DATA=false
      - HTTP_PORT=${MASTER1_HTTP_PORT}
      - TRANSPORT_TCP_PORT=${MASTER1_TRANSPORT_TCP_PORT}
      - DISCOVERY_PING_UNICAST_HOSTS=${DISCOVERY_PING_UNICAST_HOSTS}
      - DISCOVERY_MINIMUM_MASTER_NODES=${DISCOVERY_MINIMUM_MASTER_NODES}
    command: ${ELASTICSEARCH_START_CMD}
    volumes:
      - ${MASTER1_DATA_PATH}:${ELASTICSEARCH_DATA_PATH}
  elasticsearch_master2:
    image: elasticsearch:latest
    ports:
      - ${MASTER2_HTTP_PORT}:${MASTER2_HTTP_PORT}
      - ${MASTER2_TRANSPORT_TCP_PORT}:${MASTER2_TRANSPORT_TCP_PORT}
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - NODE_NAME=${MASTER2_NODE_NAME}
      - NODE_MASTER=true
      - NODE_DATA=false
      - HTTP_PORT=${MASTER2_HTTP_PORT}
      - TRANSPORT_TCP_PORT=${MASTER2_TRANSPORT_TCP_PORT}
      - DISCOVERY_PING_UNICAST_HOSTS=${DISCOVERY_PING_UNICAST_HOSTS}
      - DISCOVERY_MINIMUM_MASTER_NODES=${DISCOVERY_MINIMUM_MASTER_NODES}
    command: ${ELASTICSEARCH_START_CMD}
    volumes:
      - ${MASTER2_DATA_PATH}:${ELASTICSEARCH_DATA_PATH}
  elasticsearch_data1:
    image: elasticsearch:latest
    ports:
      - ${DATA1_HTTP_PORT}:${DATA1_HTTP_PORT}
      - ${DATA1_TRANSPORT_TCP_PORT}:${DATA1_TRANSPORT_TCP_PORT}
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - NODE_NAME=${DATA1_NODE_NAME}
      - NODE_MASTER=false
      - NODE_DATA=true
      - HTTP_PORT=${DATA1_HTTP_PORT}
      - TRANSPORT_TCP_PORT=${DATA1_TRANSPORT_TCP_PORT}
      - DISCOVERY_PING_UNICAST_HOSTS=${DISCOVERY_PING_UNICAST_HOSTS}
      - DISCOVERY_MINIMUM_MASTER_NODES=${DISCOVERY_MINIMUM_MASTER_NODES}
    command: ${ELASTICSEARCH_START_CMD}
    volumes:
      - ${DATA1_DATA_PATH}:${ELASTICSEARCH_DATA_PATH}
    depends_on:
      - elasticsearch_master1
      - elasticsearch_master2
  elasticsearch_data2:
    image: elasticsearch:latest
    ports:
      - ${DATA2_HTTP_PORT}:${DATA2_HTTP_PORT}
      - ${DATA2_TRANSPORT_TCP_PORT}:${DATA2_TRANSPORT_TCP_PORT}
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - NODE_NAME=${DATA2_NODE_NAME}
      - NODE_MASTER=false
      - NODE_DATA=true
      - HTTP_PORT=${DATA2_HTTP_PORT}
      - TRANSPORT_TCP_PORT=${DATA2_TRANSPORT_TCP_PORT}
      - DISCOVERY_PING_UNICAST_HOSTS=${DISCOVERY_PING_UNICAST_HOSTS}
      - DISCOVERY_MINIMUM_MASTER_NODES=${DISCOVERY_MINIMUM_MASTER_NODES}
    command: ${ELASTICSEARCH_START_CMD}
    volumes:
      - ${DATA2_DATA_PATH}:${ELASTICSEARCH_DATA_PATH}
    depends_on:
      - elasticsearch_master1
      - elasticsearch_master2
  kibana:
    image: kibana:latest
    ports:
      - ${KIBANA_PORT}:${KIBANA_PORT}
    environment:
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
    command: ${KIBANA_START_CMD}
    depends_on:
      - elasticsearch_master1
      - elasticsearch_master2
